super, extends
	existing series
state, prop
	a series to introduce this
bind
	callbacks-like teach design pattern
promises
	see above
modules
	npm install from local file
	any folder with a valid package.json
one example to rule them all



import React from 'react';
 
export default class App extends React.Component {
    constructor() {
        super();
        this.increaseNumber = this.increaseNumber.bind(this);
        this.state = {
            number: 0
        };
    }
    increaseNumber() {
        this.setState({
            number: this.state.number + 1
        });
    }
  render() {
    return (
      <div>
                <p>The number is {this.state.number}</p>
                <button onClick={this.increaseNumber} />
                <MyComponent name="Jasper" />
                <IncreaseButton incrementation={10} />
      </div>
    )
  }
}
 
const MyComponent = (props) => {
    return (
        <div>
            Hello {props.name}
        </div>
    );
};
 
class IncreaseButton extends React.Component {
  constructor() {
    super();
        this.increaseNumber = this.increaseNumber.bind(this);
    this.state = {
        value: 0
        };
  }
    increaseNumber() {
        this.setState({
            value: this.value.number + this.props.incrementation
        });
    }
  render() {
    return (
        <div>
                <div>Current Value: {this.state.value}</div>
                <button onClick={this.increaseNumber} />
            </div>
        );
  }
}