all must be taught around request/response cycle
	server is a function:
		- args: http request
		- return: http response
		- behavior: use the information contained in the http request object to build an http response object. then send that response out over the interwebs.  essentially a giant series of ifs, else ifs, and else's
		- purpose: allow users in the outside world to access your data (websites, movies, ebooks, whatever) remotely, while still controling how they can interact with it. (can they read only, read and write, can all users see all things?)
	what is the request/response cycle
		demo on board
		mention pure node
		then express
		then res and req
		then middleware and handlers
	http anatomy
	hit router from the start
		not THAT complicated
		already seen controller objects
		and module.exports

part2
	check up on served tictactoe and the like
	rebuild paintings from html back
	introduce middleware
	calcs through 404 (including callback rewrite)
	ejs - debugthese, boardbuilder
	cover req/res cycle
	cover handlers and body parser
	crud-rest, beavers
	start projects
	documentation reading
		static serving
		middlewares
	


https://github.com/olivierkaisin/node-express-router

	static paintings
	static battleship
	rebuild paintings from wireframes
	cover middleware
	cover req/res cycle
	cover handlers and body parser
	build public facing api for paintings


stages by template-app

rien has
	regular progression
	product/config
	mod out products
	api prod
	jsdoc
	async calls


	